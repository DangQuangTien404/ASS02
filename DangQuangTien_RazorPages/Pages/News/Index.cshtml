@page
@model DangQuangTien_RazorPages.Pages.News.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<h1>News</h1>

<form method="get" class="row g-2 align-items-center mb-4">
    <div class="col-auto">
        <input type="text" name="SearchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search titles..." />
    </div>
    <div class="col-auto">
        <select name="SelectedCategoryId" class="form-select">
            <option value="">-- All Categories --</option>
            @foreach (var cat in Model.Categories)
            {
                <option value="@cat.CategoryId" selected="@(cat.CategoryId == Model.SelectedCategoryId)">
                    @cat.CategoryName
                </option>
            }
        </select>
    </div>
    <div class="col-auto form-check mt-2">
        <input asp-for="OnlyActive" class="form-check-input" />
        <label asp-for="OnlyActive" class="form-check-label">Active only</label>
    </div>
    <div class="col-auto">
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
</form>

@if (Model.CanEdit)
{
    <a asp-page="Create" class="btn btn-success mb-3" data-popup="create">New Article</a>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>Title</th>
            <th>Category</th>
            <th>Date</th>
            <th>Status</th>
            @if (Model.CanEdit)
            {
                <th>Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var article in Model.Articles)
        {
            <tr>
                <td>@article.NewsTitle</td>
                <td>@article.Category?.CategoryName</td>
                <td>@article.CreatedDate?.ToString("g")</td>
                <td>@(article.NewsStatus == true ? "Active" : "Inactive")</td>
                @if (Model.CanEdit)
                {
                    <td>
                        <a asp-page="Edit" asp-route-id="@article.NewsArticleId" class="btn btn-warning btn-sm" data-popup="edit">Edit</a>
                        <a asp-page="Delete" asp-route-id="@article.NewsArticleId" class="btn btn-danger btn-sm" data-confirm="Are you sure you want to delete this article?">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script src="~/js/signalr/dist/browser/signalr.js"></script>
    <script>
        // Initialize SignalR connection
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/newsHub")
            .build();

        // Handle notifications
        connection.on("ReceiveNotification", function() {
            // Get current filter values
            const searchTerm = $("input[name='SearchTerm']").val();
            const categoryId = $("select[name='SelectedCategoryId']").val();
            const onlyActive = $("#OnlyActive").is(":checked");

            // Make AJAX call to get updated data
            $.ajax({
                url: '/News/Index?handler=IndexPartial',
                data: {
                    SearchTerm: searchTerm,
                    SelectedCategoryId: categoryId,
                    OnlyActive: onlyActive
                },
                type: 'GET',
                success: function(result) {
                    // Replace table content with new data
                    $("table.table-striped tbody").html(result);

                    // Show notification to user
                    const toast = $('<div class="toast align-items-center text-white bg-success" role="alert" aria-live="assertive" aria-atomic="true">')
                        .append('<div class="d-flex"><div class="toast-body">News articles have been updated!</div>' +
                                '<button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button></div>')
                        .appendTo($('body'));

                    // Show toast notification
                    const bsToast = new bootstrap.Toast(toast, { delay: 3000 });
                    bsToast.show();

                    // Remove toast after it's hidden
                    toast.on('hidden.bs.toast', function() {
                        $(this).remove();
                    });
                }
            });
        });

        // Also handle the global ReceiveNewArticle event
        connection.on("ReceiveNewArticle", function(title, url) {
            // Update the news notifications area
            const notification = $('<li class="list-group-item list-group-item-success animate__animated animate__fadeIn">')
                .html(`<strong>${title}</strong> - <a href="${url}">View article</a>`);

            $("#newsNotifications").prepend(notification);

            // After 10 seconds, remove the highlight
            setTimeout(() => {
                notification.removeClass("list-group-item-success");
            }, 10000);
        });

        // Start the connection
        connection.start().catch(function(err) {
            console.error("SignalR connection failed:", err.toString());
        });
    </script>
}